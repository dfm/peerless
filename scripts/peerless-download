#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import requests
import argparse
from tqdm import tqdm
from zipfile import ZipFile
from multiprocessing import Pool

from peerless.catalogs import DatasetsCatalog
from peerless.settings import PEERLESS_DATA_DIR


def download_for_kicid(kicid):
    bp = os.path.join(PEERLESS_DATA_DIR, "data")
    os.makedirs(bp, exist_ok=True)
    filename = os.path.join(bp, "{0}.zip".format(kicid))
    if os.path.exists(filename):
        return

    df = DatasetsCatalog().df
    datasets = df[df.ktc_kepler_id == kicid]

    with ZipFile(filename, "w") as f:
        for _, row in datasets.iterrows():
            r = requests.get(row.remote)
            if r.status_code != requests.codes.ok:
                r.raise_for_status()
            f.writestr(row.local, r.content)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="download all the light curves"
    )
    parser.add_argument("-p", "--parallel", default=0, type=int,
                        help="run in parallel")
    args = parser.parse_args()

    df = DatasetsCatalog().df
    kicids = df.ktc_kepler_id.unique()

    if args.parallel > 0:
        pool = Pool(args.parallel)
        M = pool.imap_unordered
    else:
        M = map

    list(tqdm(M(download_for_kicid, kicids), total=len(kicids)))
