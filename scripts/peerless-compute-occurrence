#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import argparse
import numpy as np
import pandas as pd

from peerless.occurrence import compute_occurrence

# Default grid
default_rmin = 0.009155 / 0.0995
default_rmax = 1.0
default_pmin = 2.0
default_pmax = 25.0


parser = argparse.ArgumentParser(
    description="compute the occurrence rate of long-period planets"
)
parser.add_argument("fits", help="fit summary file")
parser.add_argument("injections", help="injections summary file")

parser.add_argument("--rmin", type=float, default=default_rmin,
                    help="the minimum radius in Jupiter radii")
parser.add_argument("--rmax", type=float, default=default_rmax,
                    help="the maximum radius in Jupiter radii")
parser.add_argument("--rbins", type=int, default=2,
                    help="the number of radius bins")

parser.add_argument("--pmin", type=float, default=default_pmin,
                    help="the minimum period in years")
parser.add_argument("--pmax", type=float, default=default_pmax,
                    help="the maximum period in years")
parser.add_argument("--pbins", type=int, default=1,
                    help="the number of period bins")

parser.add_argument("-o", "--output", default="results",
                    help="the root directory for the output")
args = parser.parse_args()

# Load the target and injection tables.
inj = pd.read_hdf(args.injections, "injections")
fits = pd.read_csv(args.fits)

# Define the grids.
rgrid = np.exp(np.linspace(np.log(args.rmin), np.log(args.rmax), args.rbins+1))
pgrid = np.exp(np.linspace(np.log(args.pmin), np.log(args.pmax), args.pbins+1))

df = compute_occurrence(inj, fits, rgrid, pgrid)
df.to_csv(os.path.join(args.output, "rate.csv"), index=False)
